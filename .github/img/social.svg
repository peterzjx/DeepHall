<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="1280"
   height="640"
   viewBox="0 0 338.66667 169.33333"
   version="1.1"
   id="svg1"
   inkscape:version="1.3.2 (091e20e, 2023-11-25)"
   sodipodi:docname="social.svg"
   inkscape:export-filename="social.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.3323934"
     inkscape:cx="691.95116"
     inkscape:cy="233.15746"
     inkscape:window-width="1392"
     inkscape:window-height="916"
     inkscape:window-x="23"
     inkscape:window-y="38"
     inkscape:window-maximized="0"
     inkscape:current-layer="layer1" />
  <defs
     id="defs1">
    <linearGradient
       id="linearGradient1"
       inkscape:collect="always">
      <stop
         style="stop-color:#ecfccb;stop-opacity:1"
         offset="0"
         id="stop1" />
      <stop
         style="stop-color:#e0f2fe;stop-opacity:1"
         offset="1"
         id="stop2" />
    </linearGradient>
    <linearGradient
       id="linearGradient187"
       inkscape:collect="always">
      <stop
         style="stop-color:#0284c7;stop-opacity:1;"
         offset="0"
         id="stop187" />
      <stop
         style="stop-color:#0f766e;stop-opacity:1"
         offset="1"
         id="stop188" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient187"
       id="linearGradient188"
       x1="60.600533"
       y1="16.385742"
       x2="60.600533"
       y2="-4.7190537"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.4748091,0.82744753,-0.82744753,1.4748091,-32.156948,-25.541195)" />
    <meshgradient
       inkscape:collect="always"
       id="meshgradient303"
       gradientUnits="userSpaceOnUse"
       x="23.59375"
       y="57.9375"
       gradientTransform="translate(16.20883,-0.03772333)">
      <meshrow
         id="meshrow867">
        <meshpatch
           id="meshpatch867">
          <stop
             path="c 29.4258,0  58.8516,0  88.2773,0"
             style="stop-color:#65a30d;stop-opacity:1"
             id="stop867" />
          <stop
             path="c -56.701,10.178  4e-05,59.7413  -29.8339,77.5781"
             style="stop-color:#0369a1;stop-opacity:1"
             id="stop868" />
          <stop
             path="c -29.4258,0.000319994  0.819323,0.0003192  -28.6075,0.0003192"
             style="stop-color:#f0f9ff;stop-opacity:0.6"
             id="stop869" />
          <stop
             path="c -34.6566,-13.8891  26.302,-70.1643  -29.8359,-77.5784"
             style="stop-color:#f7fee7;stop-opacity:0.6"
             id="stop870" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Blur"
       id="filter870"
       x="-0.05437409"
       y="-0.061873116"
       width="1.1087482"
       height="1.1237462">
      <feGaussianBlur
         stdDeviation="2 2"
         result="blur"
         id="feGaussianBlur870" />
    </filter>
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient1-3"
       id="radialGradient2-2"
       cx="71.00135"
       cy="44.88636"
       fx="71.00135"
       fy="44.88636"
       r="53.416668"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(-0.40304627,1.7258366,-2.4152105,-0.56404046,219.31265,98.692205)" />
    <linearGradient
       id="linearGradient1-3"
       inkscape:collect="always">
      <stop
         style="stop-color:#a7f3d0;stop-opacity:1"
         offset="0"
         id="stop1-0" />
      <stop
         style="stop-color:#047857;stop-opacity:1"
         offset="0.90925592"
         id="stop19-2" />
      <stop
         style="stop-color:#065f46;stop-opacity:1"
         offset="1"
         id="stop2-6" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient1"
       id="linearGradient2"
       x1="0"
       y1="169.33333"
       x2="338.66666"
       y2="0"
       gradientUnits="userSpaceOnUse" />
  </defs>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1">
    <rect
       style="fill:url(#linearGradient2);stroke-width:2;fill-opacity:1"
       id="rect1"
       width="338.66666"
       height="169.33333"
       x="0"
       y="0" />
    <g
       id="g1"
       transform="matrix(1.1755207,0,0,1.1755207,70.657575,10.261838)">
      <path
         id="path1-6"
         style="fill:url(#radialGradient2-2);stroke:none;stroke-width:2.07077"
         d="M 71.999741,96.977544 A 109.57848,109.57848 0 0 0 0,135.46667 H 167.88434 A 109.57848,109.57848 0 0 0 95.884588,96.977544 12,12 0 0 1 83.942164,108.17376 12,12 0 0 1 71.999741,96.977544 Z" />
      <g
         id="g19"
         transform="matrix(1.2875124,-0.722364,0.722364,1.2875124,-7.4982187,23.461397)">
        <path
           id="path172"
           style="fill:url(#linearGradient188);fill-opacity:1;stroke:none;stroke-width:1.14547;stroke-dasharray:none;stroke-opacity:1"
           d="m 29.404365,-0.1524647 a 5.7220131,5.7220131 0 0 0 -7.789883,2.1908388 5.7220131,5.7220131 0 0 0 2.190321,7.789593 5.7220131,5.7220131 0 0 0 1.390144,0.5539249 l -0.75822,15.891516 a 5.7220131,5.7220131 0 0 0 -4.11324,2.841855 5.7220131,5.7220131 0 0 0 2.190323,7.789594 5.7220131,5.7220131 0 0 0 7.79011,-2.190032 5.7220131,5.7220131 0 0 0 0.407067,-0.933619 l 10.036896,1.319204 2.148731,4.21509 a 5.7220131,5.7220131 0 0 0 -1.428011,1.663315 5.7220131,5.7220131 0 0 0 2.190321,7.789592 5.7220131,5.7220131 0 0 0 7.79011,-2.190032 5.7220131,5.7220131 0 0 0 0.675172,-2.087734 l 4.715625,-0.362456 6.358312,7.879391 a 5.7220131,5.7220131 0 0 0 -0.584425,0.834789 5.7220131,5.7220131 0 0 0 2.190321,7.789594 5.7220131,5.7220131 0 0 0 7.79011,-2.190034 5.7220131,5.7220131 0 0 0 0.282172,-4.98993 l 13.172802,-8.933732 a 5.7220131,5.7220131 0 0 0 1.191023,0.900356 5.7220131,5.7220131 0 0 0 7.79011,-2.190032 5.7220131,5.7220131 0 0 0 -2.19055,-7.790399 5.7220131,5.7220131 0 0 0 -7.789881,2.190839 5.7220131,5.7220131 0 0 0 -0.408225,0.935681 l -14.981641,-1.971049 0.113573,-2.376355 a 5.7220131,5.7220131 0 0 0 4.111615,-2.852267 5.7220131,5.7220131 0 0 0 -2.190548,-7.7904 5.7220131,5.7220131 0 0 0 -7.789883,2.190838 5.7220131,5.7220131 0 0 0 -0.674883,2.087218 L 55.041619,28.48157 51.31629,21.175341 a 5.7220131,5.7220131 0 0 0 1.423742,-1.673856 5.7220131,5.7220131 0 0 0 -2.190548,-7.790399 5.7220131,5.7220131 0 0 0 -7.789883,2.190839 5.7220131,5.7220131 0 0 0 -0.36874,4.793397 L 40.308586,19.995632 31.015984,8.4798755 A 5.7220131,5.7220131 0 0 0 31.594919,7.637936 5.7220131,5.7220131 0 0 0 29.40437,-0.1524647 Z M 63.407523,30.134541 a 5.7220131,5.7220131 0 0 0 0.214562,0.619254 l -5.514361,3.741063 -1.939621,-3.803873 z m 21.145339,11.864357 a 5.7220131,5.7220131 0 0 0 0.214851,0.618738 L 71.5933,51.551822 a 5.7220131,5.7220131 0 0 0 -1.189701,-0.900294 5.7220131,5.7220131 0 0 0 -1.387585,-0.546383 l 0.330527,-6.937937 z M 28.13069,10.352513 34.800888,23.435679 28.649639,27.277563 A 5.7220131,5.7220131 0 0 0 28.11337,26.924424 5.7220131,5.7220131 0 0 0 26.724978,26.37827 L 27.48088,10.490882 a 5.7220131,5.7220131 0 0 0 0.64981,-0.138364 z m 21.145116,11.863552 3.291473,6.45602 -4.257301,0.327065 0.316016,-6.644718 a 5.7220131,5.7220131 0 0 0 0.649812,-0.138364 z m 29.715611,17.91348 -9.534715,0.732702 0.09411,-1.973914 z m -46.366016,-26.006373 5.725995,7.094987 -1.599607,0.998934 z m 10.980616,6.517057 a 5.7220131,5.7220131 0 0 0 1.343902,1.051288 5.7220131,5.7220131 0 0 0 1.389109,0.553345 l -0.234902,4.932291 -4.344898,-5.384136 z M 64.905559,32.65558 a 5.7220131,5.7220131 0 0 0 1.189474,0.899489 5.7220131,5.7220131 0 0 0 1.389625,0.553634 l -0.103916,2.184939 -6.566128,-0.863786 z m -25.103516,-9.640036 5.043567,6.249888 -4.330974,0.332563 -2.717566,-5.330399 z m 13.891724,7.865954 1.974295,3.871518 -3.860251,-0.507647 -2.445307,-3.03079 z m 13.577033,7.707043 -0.116583,2.450682 -5.494468,0.422324 -1.973553,-3.870422 z m -31.424631,-13.102358 2.193616,4.302036 -7.238615,0.556218 a 5.7220131,5.7220131 0 0 0 -0.579825,-1.346139 z m 31.197887,17.858001 -0.31739,6.656843 a 5.7220131,5.7220131 0 0 0 -0.642168,0.13926 l -3.29855,-6.468814 z M 45.898654,31.48115 l -0.09389,1.974721 -3.562362,-0.468796 -0.600534,-1.178571 z m 11.347882,6.368133 1.938363,3.802488 -1.318549,0.101177 -2.255415,-2.794612 z m -2.705574,-0.934936 -0.374666,0.25405 -0.273232,-0.339272 z m -6.436006,-3.609589 0.409651,0.507441 -0.431145,-0.0566 z m 2.494904,3.091197 1.664334,2.062527 -1.814459,1.230657 a 5.7220131,5.7220131 0 0 0 -1.19125,-0.901163 5.7220131,5.7220131 0 0 0 -1.388392,-0.546156 l 0.104457,-2.190742 z m 9.712044,7.465518 1.276752,2.504129 -1.977376,-2.450604 z m -21.145177,-11.862227 0.31872,0.62475 -3.11622,-0.409891 z m 6.528606,3.751815 -0.113776,2.386415 a 5.7220131,5.7220131 0 0 0 -0.642168,0.13926 l -1.434253,-2.813767 z m 8.012984,4.497074 1.386586,1.718006 -3.148619,0.241848 a 5.7220131,5.7220131 0 0 0 -0.215077,-0.619546 z" />
      </g>
      <circle
         style="fill:#0c4a6e;stroke:none;stroke-width:2;stroke-dasharray:none;stroke-opacity:1"
         id="path3"
         cx="83.942162"
         cy="96.173981"
         r="10" />
      <path
         style="color:#000000;fill:url(#meshgradient303);fill-opacity:1;-inkscape-stroke:none"
         d="M 128.07995,57.899774 H 39.802583 C 99.37031,65.387783 71.99604,130.15233 69.63852,135.4779 H 98.24594 C 96.196701,130.37501 67.334826,65.569043 128.07995,57.899774 Z"
         id="path4"
         sodipodi:nodetypes="ccccc" />
    </g>
    <path
       style="font-weight:bold;font-size:81.1389px;font-family:'Libertinus Serif';-inkscape-font-specification:'Libertinus Serif Bold';fill:#155e75;stroke-width:1.2"
       d="m 260.1237,80.615694 c 0,-1.36314 -0.16228,-2.3368 -0.48684,-2.921 -0.29209,-0.5842 -0.73024,-0.95744 -1.31445,-1.11972 -0.5842,-0.19473 -1.33068,-0.30833 -2.23943,-0.34078 -0.22719,-0.16228 -0.34078,-0.43815 -0.34078,-0.82762 0,-0.42193 0.11359,-0.69779 0.34078,-0.82762 0.64911,0 1.42805,0.0162 2.3368,0.0487 0.94122,0 1.8662,0.0162 2.77495,0.0487 h 2.38548 2.33681 c 0.90875,-0.0325 1.81751,-0.0487 2.72626,-0.0487 0.90876,-0.0325 1.6877,-0.0487 2.33681,-0.0487 0.25964,0.12983 0.38946,0.40569 0.38946,0.82762 0,0.38947 -0.12982,0.66534 -0.38946,0.82762 -0.8763,0.0325 -1.62278,0.14603 -2.23944,0.34078 -0.5842,0.16228 -1.03857,0.53552 -1.36313,1.11972 -0.2921,0.5842 -0.43815,1.55786 -0.43815,2.921 v 19.522016 c 0,1.33067 0.14605,2.30434 0.43815,2.92099 0.32456,0.5842 0.77893,0.95744 1.36313,1.11972 0.61666,0.16227 1.36314,0.27587 2.23944,0.34078 0.25964,0.12982 0.38946,0.40569 0.38946,0.82762 0,0.38946 -0.12982,0.66534 -0.38946,0.82761 -0.64911,-0.0324 -1.42805,-0.0487 -2.33681,-0.0487 -0.90875,0 -1.81751,-0.0162 -2.72626,-0.0487 h -2.33681 -2.38548 c -0.90875,0.0324 -1.83373,0.0487 -2.77495,0.0487 -0.90875,0 -1.68769,0.0162 -2.3368,0.0487 -0.22719,-0.16227 -0.34078,-0.43815 -0.34078,-0.82761 0,-0.42193 0.11359,-0.6978 0.34078,-0.82762 0.90875,-0.0649 1.65523,-0.17851 2.23943,-0.34078 0.58421,-0.16228 1.02236,-0.53552 1.31445,-1.11972 0.32456,-0.61665 0.48684,-1.59032 0.48684,-2.92099 v -9.590617 h -15.09185 v 9.590617 c 0,1.33067 0.14605,2.30434 0.43815,2.92099 0.32456,0.5842 0.77893,0.95744 1.36314,1.11972 0.61665,0.16227 1.36313,0.27587 2.23943,0.34078 0.25964,0.12982 0.38947,0.40569 0.38947,0.82762 0,0.38946 -0.12983,0.66534 -0.38947,0.82761 -0.64911,-0.0324 -1.42805,-0.0487 -2.3368,-0.0487 -0.90876,0 -1.81751,-0.0162 -2.72626,-0.0487 h -2.33681 -2.38548 c -0.90876,0.0324 -1.83375,0.0487 -2.77496,0.0487 -0.90875,0 -1.68769,0.0162 -2.3368,0.0487 -0.22719,-0.16227 -0.34078,-0.43815 -0.34078,-0.82761 0,-0.42193 0.11359,-0.6978 0.34078,-0.82762 0.90875,-0.0649 1.65523,-0.17851 2.23943,-0.34078 0.58421,-0.16228 1.02236,-0.53552 1.31446,-1.11972 0.32456,-0.61665 0.48684,-1.59032 0.48684,-2.92099 V 80.615694 c 0,-1.36314 -0.16228,-2.3368 -0.48684,-2.921 -0.2921,-0.5842 -0.73025,-0.95744 -1.31446,-1.11972 -0.5842,-0.19473 -1.33068,-0.30833 -2.23943,-0.34078 -0.22719,-0.16228 -0.34078,-0.43815 -0.34078,-0.82762 0,-0.42193 0.11359,-0.69779 0.34078,-0.82762 0.64911,0 1.42805,0.0162 2.3368,0.0487 0.94121,0 1.8662,0.0162 2.77496,0.0487 h 2.38548 2.33681 c 0.90875,-0.0325 1.8175,-0.0487 2.72626,-0.0487 0.90875,-0.0325 1.68769,-0.0487 2.3368,-0.0487 0.25964,0.12983 0.38947,0.40569 0.38947,0.82762 0,0.38947 -0.12983,0.66534 -0.38947,0.82762 -0.8763,0.0325 -1.62278,0.14603 -2.23943,0.34078 -0.58421,0.16228 -1.03858,0.53552 -1.36314,1.11972 -0.2921,0.5842 -0.43815,1.55786 -0.43815,2.921 v 7.594599 h 15.09185 z m 26.67845,23.075886 -0.2921,0.0487 c -0.51929,0.42193 -1.15217,0.86008 -1.89865,1.31445 -0.74648,0.42193 -1.47673,0.77894 -2.19075,1.07104 -0.68156,0.2921 -1.26577,0.43815 -1.7526,0.43815 -2.10961,0 -3.65125,-0.42192 -4.62491,-1.26577 -0.97367,-0.8763 -1.46052,-2.15829 -1.46052,-3.84598 0,-1.29821 0.37325,-2.35302 1.11973,-3.16441 0.74648,-0.81139 1.76883,-1.49295 3.06705,-2.0447 1.29822,-0.5842 2.8074,-1.13594 4.52755,-1.65523 l 3.26179,-1.02235 c 0,-2.077158 -0.17851,-3.60257 -0.53552,-4.576236 -0.32456,-1.00612 -0.77893,-1.67146 -1.36314,-1.99602 -0.55174,-0.32455 -1.16839,-0.48683 -1.84996,-0.48683 -0.81139,0 -1.34691,0.11359 -1.60655,0.34078 -0.25965,0.22719 -0.4057,0.48684 -0.43815,0.77894 -0.0649,0.42192 -0.0487,0.827613 0.0487,1.217079 0.0974,0.389467 0.14605,0.746478 0.14605,1.071034 0,0.5842 -0.2921,1.103489 -0.8763,1.557866 -0.55175,0.454377 -1.26577,0.681567 -2.14207,0.681567 -0.94121,0 -1.59032,-0.22719 -1.94733,-0.681567 -0.35701,-0.486833 -0.53552,-1.071033 -0.53552,-1.7526 0,-0.811389 0.2921,-1.541639 0.8763,-2.190749 0.5842,-0.64911 1.3469,-1.20086 2.28812,-1.65523 0.94121,-0.45438 1.9311,-0.79516 2.96968,-1.02235 1.03858,-0.25965 1.99602,-0.38947 2.87232,-0.38947 1.00612,0 1.99601,0.11359 2.96968,0.34078 0.97367,0.22719 1.8662,0.64911 2.67759,1.26577 0.81139,0.5842 1.4605,1.42804 1.94734,2.531532 0.48683,1.10349 0.73025,2.531534 0.73025,4.284134 l -0.0974,7.0104 c 0,1.20085 0.0974,2.04469 0.2921,2.53153 0.19474,0.48683 0.55175,0.73025 1.07104,0.73025 0.45437,0 0.82761,-0.0487 1.11971,-0.14605 0.2921,-0.12983 0.60043,-0.30833 0.92498,-0.53552 0.48684,0.35701 0.77894,0.81139 0.8763,1.36313 -0.90875,0.84385 -1.86619,1.50918 -2.87231,1.99602 -1.00612,0.48683 -2.17453,0.73025 -3.5052,0.73025 -2.20699,0 -3.47276,-0.95744 -3.79731,-2.87232 z m -0.24341,-8.22747 -2.53154,0.82762 c -1.13595,0.38946 -1.96356,0.81139 -2.48285,1.26577 -0.48683,0.45437 -0.79516,0.94121 -0.92498,1.4605 -0.12983,0.51928 -0.19473,1.08726 -0.19473,1.7039 0,0.74648 0.21096,1.42805 0.63288,2.0447 0.42192,0.5842 1.15217,0.8763 2.19075,0.8763 0.45438,0 0.95744,-0.16228 1.50918,-0.48683 0.5842,-0.35701 1.18463,-0.77893 1.80129,-1.26577 z m 15.38397,4.43019 V 78.570994 c 0,-1.10349 -0.0649,-1.89865 -0.19473,-2.38549 -0.12982,-0.48683 -0.42193,-0.79516 -0.8763,-0.92498 -0.45438,-0.16228 -1.20086,-0.27587 -2.23943,-0.34078 -0.25965,-0.45438 -0.30833,-0.97367 -0.14606,-1.55787 1.72015,-0.0649 3.44029,-0.21096 5.16044,-0.43815 1.7526,-0.25965 3.08329,-0.53552 3.99204,-0.82762 0.51929,0 0.77894,0.21096 0.77894,0.63289 l -0.0974,1.31445 c -0.0325,0.84384 -0.0487,2.06092 -0.0487,3.65125 V 99.8943 c 0,1.33066 0.0974,2.32056 0.2921,2.96967 0.22719,0.64911 0.61666,1.07103 1.1684,1.26576 0.55174,0.19474 1.31445,0.32456 2.28812,0.38947 0.16228,0.12982 0.24341,0.40569 0.24341,0.82762 0,0.38946 -0.0811,0.66534 -0.24341,0.82761 -1.03858,-0.0324 -2.10961,-0.0649 -3.2131,-0.0974 h -3.69995 -3.69993 c -1.10349,0.0324 -2.17452,0.0649 -3.2131,0.0974 -0.12982,-0.16227 -0.19474,-0.43815 -0.19474,-0.82761 0,-0.42193 0.0649,-0.6978 0.19474,-0.82762 1.00612,-0.0649 1.76882,-0.19473 2.28812,-0.38947 0.55174,-0.19473 0.92498,-0.61665 1.11971,-1.26576 0.22719,-0.64911 0.34078,-1.63901 0.34078,-2.96967 z m 15.82212,0 V 78.570994 c 0,-1.10349 -0.0649,-1.89865 -0.19473,-2.38549 -0.12982,-0.48683 -0.42193,-0.79516 -0.8763,-0.92498 -0.45438,-0.16228 -1.20086,-0.27587 -2.23944,-0.34078 -0.25964,-0.45438 -0.30832,-0.97367 -0.14605,-1.55787 1.72015,-0.0649 3.44029,-0.21096 5.16043,-0.43815 1.7526,-0.25965 3.08328,-0.53552 3.99204,-0.82762 0.51929,0 0.77894,0.21096 0.77894,0.63289 l -0.0974,1.31445 c -0.0325,0.84384 -0.0487,2.06092 -0.0487,3.65125 V 99.8943 c 0,1.33066 0.0974,2.32056 0.2921,2.96967 0.22719,0.64911 0.61665,1.07103 1.1684,1.26576 0.55174,0.19474 1.31445,0.32456 2.28811,0.38947 0.16228,0.12982 0.24342,0.40569 0.24342,0.82762 0,0.38946 -0.0811,0.66534 -0.24342,0.82761 -1.03857,-0.0324 -2.1096,-0.0649 -3.21309,-0.0974 h -3.69994 -3.69994 c -1.10349,0.0324 -2.17452,0.0649 -3.21309,0.0974 -0.12982,-0.16227 -0.19474,-0.43815 -0.19474,-0.82761 0,-0.42193 0.0649,-0.6978 0.19474,-0.82762 1.00612,-0.0649 1.76882,-0.19473 2.28811,-0.38947 0.55175,-0.19473 0.92499,-0.61665 1.11972,-1.26576 0.22719,-0.64911 0.34078,-1.63901 0.34078,-2.96967 z"
       id="text874"
       aria-label="DeepHall"
       sodipodi:nodetypes="scccscccccccscccsscccscscccscscscsccscccscscccscscscsscccscccccccscccsccsccccscsscccccsscsscscssscsscsccsscccsssccccsscsccccsscccccccsscscscccccscccsccsscccccccsscscscccccscccsc" />
    <path
       d="m 19.422608,106.07703 h -1.996013 c -0.811392,0.0325 -1.639008,0.0487 -2.482854,0.0487 h -2.142066 l -0.8763,0.0487 c -0.22719,-0.16228 -0.340782,-0.43815 -0.340782,-0.82762 0,-0.42192 0.113592,-0.69779 0.340782,-0.82761 0.908754,-0.0649 1.655232,-0.17851 2.239434,-0.34078 0.584196,-0.16228 1.022346,-0.53552 1.31445,-1.11972 0.324552,-0.61665 0.486834,-1.59032 0.486834,-2.921 V 80.615648 c 0,-1.363128 -0.162282,-2.336796 -0.486834,-2.920998 -0.292104,-0.584196 -0.730254,-0.957438 -1.31445,-1.11972 -0.584202,-0.19473 -1.33068,-0.308322 -2.239434,-0.340782 -0.22719,-0.162276 -0.340782,-0.438144 -0.340782,-0.827616 0,-0.42192 0.113592,-0.697794 0.340782,-0.827616 l 0.8763,0.04866 h 2.142066 c 0.843846,0 1.671462,0.0162 2.482854,0.04866 h 1.996013 3.018372 c 1.07103,-0.03246 2.255658,-0.04866 3.553884,-0.04866 3.992028,0 7.302498,0.746478 9.931398,2.239434 2.6289,1.460502 4.592461,3.440292 5.890681,5.939364 1.330674,2.466626 1.996014,5.209121 1.996014,8.227488 0,2.466623 -0.373236,4.673601 -1.119714,6.620934 -0.714024,1.914878 -1.655232,3.391604 -2.823631,4.430184 -1.720146,1.49295 -3.71616,2.54776 -5.988048,3.16441 -2.23944,0.61665 -4.43019,0.92498 -6.57225,0.92498 -0.649116,0 -1.476732,-0.0163 -2.482854,-0.0487 -0.973668,0 -1.963566,-0.0163 -2.969682,-0.0487 h -2.43417 z m 3.359154,-5.79331 c 0,1.62278 0.357006,2.67758 1.07103,3.16441 0.714024,0.45438 1.914876,0.68157 3.602568,0.68157 0.941208,0 1.931106,-0.19474 2.969688,-0.5842 1.038576,-0.42192 2.012238,-1.08726 2.920998,-1.99602 0.908754,-0.94121 1.655232,-2.174516 2.239434,-3.699927 0.584196,-1.525411 0.8763,-3.391606 0.8763,-5.598584 0,-1.849967 -0.113598,-3.683706 -0.340782,-5.501218 -0.227196,-1.849965 -0.6978,-3.521427 -1.411818,-5.014383 -0.68157,-1.52541 -1.736376,-2.742492 -3.164418,-3.651252 -1.428048,-0.941208 -3.342924,-1.411818 -5.744634,-1.411818 -0.8763,0 -1.606554,0.275874 -2.19075,0.827616 -0.551748,0.551748 -0.827616,1.492956 -0.827616,2.823636 z m 44.350482,-0.486834 c 0.259644,0 0.43815,0.178506 0.535512,0.535514 0.129822,0.32456 0.194736,0.64911 0.194736,0.97367 -1.200858,1.78505 -2.596446,3.11573 -4.18677,3.99203 -1.590318,0.84384 -3.229326,1.26576 -4.917011,1.26576 -3.342924,0 -5.906916,-0.81138 -7.69197,-2.43416 -1.038582,-0.94121 -1.817514,-2.09338 -2.336802,-3.45651 -0.519288,-1.395592 -0.778932,-2.80741 -0.778932,-4.235454 0,-1.849967 0.324558,-3.505201 0.973668,-4.965701 0.64911,-1.492956 1.509186,-2.758722 2.580216,-3.7973 1.07103,-1.038578 2.255658,-1.833739 3.553884,-2.385484 1.29822,-0.551747 2.580216,-0.827621 3.845982,-0.827621 1.785053,0 3.245555,0.259644 4.381499,0.778938 1.168398,0.486833 2.060928,1.152173 2.677584,1.996017 0.64911,0.843844 1.08726,1.785056 1.31445,2.823633 0.259644,1.006122 0.389466,2.028473 0.389466,3.067051 0,0.324556 -0.09737,0.665339 -0.292098,1.02235 -0.162276,0.324556 -0.535512,0.486834 -1.119714,0.486834 H 54.571941 c 0,0.129822 -0.0162,0.259644 -0.04866,0.389466 v 0.389467 c 0,2.369256 0.551742,4.121856 1.655232,5.257804 1.10349,1.13594 2.596446,1.70391 4.478867,1.70391 0.941214,0 1.99602,-0.17851 3.164418,-0.53552 1.200858,-0.35701 2.304348,-1.03857 3.31047,-2.044694 z M 54.766677,92.689119 h 6.620933 c 0.06491,-0.06491 0.09736,-0.210961 0.09736,-0.43815 v -0.5842 c 0,-1.298223 -0.178506,-2.320573 -0.535512,-3.067051 -0.324558,-0.746477 -0.730253,-1.281994 -1.217087,-1.60655 -0.454374,-0.324555 -0.908754,-0.486833 -1.363134,-0.486833 -0.259644,0 -0.66534,0.129822 -1.217082,0.389467 -0.551742,0.259644 -1.022352,0.681566 -1.411818,1.265766 -0.324558,0.486834 -0.567972,1.152172 -0.730248,1.996017 -0.129822,0.843845 -0.21096,1.687689 -0.243414,2.531534 z m 36.512516,7.107767 c 0.25965,0 0.43815,0.178506 0.53552,0.535514 0.12982,0.32456 0.19473,0.64911 0.19473,0.97367 -1.20085,1.78505 -2.59644,3.11573 -4.18677,3.99203 -1.59032,0.84384 -3.22932,1.26576 -4.91702,1.26576 -3.34291,0 -5.90691,-0.81138 -7.69196,-2.43416 -1.03858,-0.94121 -1.81751,-2.09338 -2.3368,-3.45651 -0.51929,-1.395592 -0.77893,-2.80741 -0.77893,-4.235454 0,-1.849967 0.32455,-3.505201 0.97366,-4.965701 0.64911,-1.492956 1.50918,-2.758722 2.58022,-3.7973 1.07103,-1.038578 2.25566,-1.833739 3.55388,-2.385484 1.29822,-0.551747 2.58022,-0.827621 3.84599,-0.827621 1.78506,0 3.24555,0.259644 4.3815,0.778938 1.1684,0.486833 2.06092,1.152173 2.67758,1.996017 0.64912,0.843844 1.08727,1.785056 1.31445,2.823633 0.25964,1.006122 0.38947,2.028473 0.38947,3.067051 0,0.324556 -0.0974,0.665339 -0.2921,1.02235 -0.16228,0.324556 -0.53552,0.486834 -1.11972,0.486834 h -11.684 c 0,0.129822 -0.0162,0.259644 -0.0487,0.389466 v 0.389467 c 0,2.369256 0.55174,4.121856 1.65523,5.257804 1.10349,1.13594 2.59645,1.70391 4.47887,1.70391 0.94121,0 1.99602,-0.17851 3.16442,-0.53552 1.20086,-0.35701 2.30435,-1.03857 3.31046,-2.044694 z m -12.36557,-7.107767 h 6.62093 c 0.0649,-0.06491 0.0974,-0.210961 0.0974,-0.43815 v -0.5842 c 0,-1.298223 -0.1785,-2.320573 -0.53551,-3.067051 -0.32456,-0.746477 -0.73025,-1.281994 -1.21709,-1.60655 -0.45437,-0.324555 -0.90875,-0.486833 -1.36313,-0.486833 -0.25964,0 -0.66533,0.129822 -1.21708,0.389467 -0.55174,0.259644 -1.02235,0.681566 -1.41182,1.265766 -0.32456,0.486834 -0.56797,1.152172 -0.73025,1.996017 -0.12982,0.843845 -0.21096,1.687689 -0.24342,2.531534 z m 19.81414,-1.655234 c 0,-0.941211 -0.0811,-1.639005 -0.24342,-2.093383 -0.16228,-0.454378 -0.47061,-0.762706 -0.92499,-0.924984 -0.45437,-0.162278 -1.11971,-0.2921 -1.99601,-0.389467 -0.0325,-0.162277 -0.0649,-0.421921 -0.0974,-0.778933 -0.0325,-0.389466 -0.0325,-0.649111 0,-0.778934 1.68769,-0.227188 3.22932,-0.486833 4.624907,-0.778933 1.3956,-0.324557 2.54777,-0.600425 3.45652,-0.827621 0.71403,0 1.08726,0.275874 1.11972,0.827621 l 0.0974,0.730251 c 0.0649,0.454377 0.1136,1.022349 0.14605,1.703916 h 0.2921 c 0.5842,-0.519288 1.23331,-1.02235 1.94733,-1.509183 0.71402,-0.519289 1.41182,-0.941212 2.09339,-1.265771 0.68156,-0.324552 1.24953,-0.486834 1.70391,-0.486834 1.26578,0 2.48286,0.194736 3.65126,0.584202 1.1684,0.389469 2.17452,1.006125 3.01836,1.84997 0.94121,0.941211 1.65524,2.109611 2.14207,3.5052 0.51928,1.395589 0.77893,2.77495 0.77893,4.138084 0,2.401711 -0.50306,4.511322 -1.50918,6.328834 -1.00612,1.78505 -2.43417,3.18064 -4.28414,4.18676 -1.81751,1.00612 -3.95957,1.50918 -6.4262,1.50918 -1.10348,0 -2.19075,-0.27587 -3.26178,-0.82761 v 5.69595 c 0,1.33068 0.0811,2.28812 0.24342,2.87232 0.19473,0.61665 0.53551,1.00612 1.02234,1.16839 0.5193,0.16228 1.26577,0.27588 2.23944,0.34079 0.16228,0.12982 0.24342,0.38947 0.24342,0.77893 0,0.42192 -0.0811,0.71402 -0.24342,0.8763 -1.03858,-0.0325 -2.09339,-0.0649 -3.16442,-0.0974 h -3.5052 -3.553887 c -1.03857,0.0325 -2.07715,0.0649 -3.11573,0.0974 -0.12982,-0.16228 -0.19473,-0.45438 -0.19473,-0.8763 0,-0.38946 0.0649,-0.64911 0.19473,-0.77893 1.00613,-0.0974 1.75261,-0.22719 2.23943,-0.38947 0.48684,-0.16228 0.8114,-0.53551 0.97367,-1.11971 0.19474,-0.5842 0.29211,-1.54164 0.29211,-2.87232 z m 6.328827,11.878735 c 0.61665,0.64911 1.20085,1.08726 1.7526,1.31445 0.55174,0.19473 0.95744,0.2921 1.21709,0.2921 1.42804,0 2.54776,-0.43815 3.35914,-1.31445 0.84385,-0.8763 1.44428,-1.97979 1.80129,-3.310467 0.35701,-1.330678 0.53552,-2.677584 0.53552,-4.040717 0,-1.914878 -0.22719,-3.456517 -0.68157,-4.624917 -0.42192,-1.200856 -0.97367,-2.077156 -1.65524,-2.628901 -0.64911,-0.5842 -1.31445,-0.8763 -1.99602,-0.8763 -0.58419,0 -1.28199,0.162278 -2.09338,0.486834 -0.81139,0.324555 -1.55786,0.795161 -2.23943,1.411816 v 0.827618 z"
       style="font-weight:bold;font-size:81.1389px;font-family:'Libertinus Serif';-inkscape-font-specification:'Libertinus Serif Bold';fill:#065f46;stroke-width:1.2"
       id="path1" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
